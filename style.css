/* 
Color pallete. This section defines variables for the color pallete,
so that we can refer to particular colors by name instead of hexadecimal values.
This is applied to the 'root' psuedo-element, which just means that these color
variables are available to be used anywhere in our html document
*/
@import url('https://fonts.googleapis.com/css2?family=Dela+Gothic+One&display=swap');

* {
    /* outline: 1px solid red; */
}

:root {
    --white: #FFFFFF;
    --black: #000000;
    /* add in other color variables for color palette */
}

/* The body of the document has ax white background and is set up as a vertical flexbox. */
body {
    background-color: #1B222C;
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Defines the main container size, we are limiting to 72em max */
.main-container {
    background-image: url(./images/back.png);
    background-size: cover;
    background-position: center;
    max-width: 72em;
    font-family: Inter;
}

/* Here we define the aspects of style of our elements other than their grid layout */
.banner {
    max-width: 100%;
}

.banner-title {
    font-family: 'Dela Gothic One', sans-serif;
    color: white;
    font-size: 64px;
    text-align: center;
    text-shadow: 2px 2px black;
}

.team-member-card {
    /* TODO: style the card as a column based flexbox with rounded corners */
    display: flex;
    max-width: 584px;
    max-height: 253px;
    background-color: #661B1C;
    opacity: 0.75;
    padding: 10px 10px 10px 10px;
    border-radius: 25px;
}

/* this is the equivalent of setting the image rectangle to "Fill Container" in Figma */ 
.team-member-card-image {
    max-height: 100%;
    max-width: 50%;
    margin-right: 5px;
    border-radius: 25px;
    
}

.team-member-card-blurb {
    /* TODO: style the blurb with padding */
    color: white;
    font-size: 20px;
    text-shadow: 2px 2px black;
}

/* this is the equivalent of setting the image rectangle to "Fill Container" in Figma */ 
.client-icon {
    width: 100%;
}

/* now we create names for the grid areas for specific elements */

#banner {
    grid-area: header;
}

#teamMemberCard1 {
    grid-area: card1;
}

#teamMemberCard2 {
    grid-area: card2;
}

#imageFrame {
    display: flex;
    border-radius: 25px;
    max-width: 568px;
    max-height: 532px;
    min-width: 100%;
    min-height: 532px;
    grid-area: image;
    overflow: hidden;
    background-image: url(./images/middle.jpg);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
}

#teamMemberCard3 {
    grid-area: card3;
}

#teamMemberCard4 {
    grid-area: card4;
}

#teamMemberCard5 {
    grid-area: card5;
}

#teamMemberCard6 {
    grid-area: card6;
}

#teamMemberCard7 {
    grid-area: card7;
}

#imageFrameImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
/* Use a flexible layout grid */
.main-container {
    display: grid;
    column-gap: 1em;
}
  
/* 
Responsive Layout breakpoints. We start 'mobile-first' i.e. we define how the layout should look
for the smallest screen sizes. In this case we want a single column that spans the main container.
Because this CSS definition comes first, it will apply by default. Then we override it below with 
media queries for progressively bigger screen widths
*/
.main-container {
    /display: grid;
    grid-template-rows: auto auto auto auto auto auto auto auto auto;
    grid-template-columns: auto;
    grid-gap: 25px 25px;
    place-items: center;
    grid-template: 
        'header'
        'card1'
        'card2'
        'card3'
        'card4'
        'image'
        'card5'
        'card6'
        'card7';
}

@media (min-width: 50em) {
    .main-container {
        display: grid;
        grid-template-rows: auto auto auto auto auto auto auto;
        grid-template-columns: auto auto;
        grid-gap: 25px 25px;
        place-items: center;
        grid-template: 
            'header header'
            'card1 card2'
            'card3 card4'
            'image image'
            'image image'
            'card5 card6'
            'card7 card7';
    }

    #imageFrame {
        min-height: 532px;
    }
}

@media (min-width: 75em) {
    .main-container {
        display: grid;
        grid-template-rows: auto auto auto auto auto auto;
        grid-template-columns: auto auto;
        grid-gap: 25px 25px;
        place-items: center;
        grid-template: 
            'header header'
            'card1 card2'
            'image card3'
            'image card4'
            'card5 card6'
            'card7 card7';
    }

    #imageFrame {
        min-height: 100%;
    }
}
